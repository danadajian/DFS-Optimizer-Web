{"version":3,"sources":["icons/loading.svg","icons/baseball.svg","icons/football.ico","icons/basketball.svg","icons/hockey.svg","icons/baseball2.svg","icons/football2.svg","icons/basketball2.svg","icons/hockey2.svg","icons/plus.ico","icons/minus.ico","icons/up.svg","icons/down.svg","icons/search.ico","functions/createEmptyLineup.js","functions/formatDate.js","resources/lineupStructures.js","resources/config.js","resources/teamAbbreviations.js","ts_objects/Loading.tsx","ts_objects/Optimizing.tsx","ts_objects/BlackList.tsx","functions/getOrdinalString.js","ts_objects/PlayerPool.tsx","functions/sumAttribute.js","functions/arrayToSet.js","ts_objects/Lineup.tsx","ts_objects/GridSection.tsx","ts_objects/ContestSection.tsx","ts_objects/SportSection.tsx","resources/injuryAbbreviations.js","App.js","functions/getFilterPlayersState.js","functions/getAddToLineupState.js","functions/getRemoveFromLineupState.js","functions/getToggleBlackListState.js","serviceWorker.js","index.js"],"names":["module","exports","createEmptyLineup","lineupMatrix","displayMatrix","map","position","index","formatDate","date","day","String","getDate","padStart","month","getMonth","getFullYear","lineupStructures","apiRoot","teamAbbreviations","loading","require","baseball","football","basketball","hockey","Loading","props","className","src","sport","alt","Optimizing","Player","style","fontWeight","player","name","team","BlackList","borderCollapse","backgroundColor","blackList","playerId","playerPool","filter","getOrdinalString","number","numString","toString","endsWith","length","plus","minus","up","down","whiteList","includes","color","status","opponent","opponentRank","projection","toFixed","salarySum","salary","cap","replace","onClick","onPlusClick","height","onMinusClick","PlayerPool","sortSign","toggleSort","marginLeft","sortAttribute","playerList","sort","a","b","sortFunction","filterList","key","whiteListFunction","blackListFunction","sumAttribute","lineup","attribute","parseFloat","reduce","arrayToSet","array","set","i","push","roundedProjection","formattedSalary","displayPosition","site","split","substring","concat","gameDate","onRemove","Lineup","dfsLineup","playerIndex","removePlayer","pointSum","search","GridSection","isLoading","isOptimizing","contest","display","flexDirection","filteredPool","type","width","value","searchText","onChange","event","filterPlayers","target","defaultValue","addToLineup","toggleBlackList","sortAttributeFunction","salaryCap","removeFromLineup","ContestSection","contests","contestName","setContest","sports","SportSection","thisSport","setSport","toUpperCase","injuryAbbreviations","App","getFanduelData","setState","fetch","then","response","json","fanduelData","setSite","state","projectionsData","dfsData","extractContestsFromData","opponentRanks","injuries","gameType","dfsPlayers","contestJson","playerPoolData","combineData","emptyLineup","combinedData","forEach","playerData","opposingTeam","toLowerCase","dataArray","contestArray","newState","text","getFilterPlayersState","playerToAdd","find","spotsToReplace","splice","indexOf","spotToReplace","lineupIndex","playerToAddCopy","JSON","parse","stringify","getAddToLineupState","alert","playerToRemove","playerInWhiteList","projected","getRemoveFromLineupState","clearLineup","blackListedPlayer","playerInLineup","getToggleBlackListState","generateOptimalLineup","method","headers","body","playerIds","Array","isArray","positionsWithIssue","id","optimalLineup","Date","this","Container","fluid","margin","marginTop","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dcb92b09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.9435ae14.svg\";","module.exports = __webpack_public_path__ + \"static/media/baseball.39b3b8a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/football.c5005feb.ico\";","module.exports = __webpack_public_path__ + \"static/media/basketball.c4945260.svg\";","module.exports = __webpack_public_path__ + \"static/media/hockey.a76c5594.svg\";","module.exports = __webpack_public_path__ + \"static/media/baseball2.73927c98.svg\";","module.exports = __webpack_public_path__ + \"static/media/football2.fac02615.svg\";","module.exports = __webpack_public_path__ + \"static/media/basketball2.48122637.svg\";","module.exports = __webpack_public_path__ + \"static/media/hockey2.1b8cf5ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.220c44df.ico\";","module.exports = __webpack_public_path__ + \"static/media/minus.5edbe473.ico\";","module.exports = __webpack_public_path__ + \"static/media/up.7dc058f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/down.3d7d7d4a.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.04c89f3b.ico\";","function createEmptyLineup(lineupMatrix, displayMatrix) {\r\n    return lineupMatrix.map((position, index) => ({\r\n        'playerId': '',\r\n        'position': position,\r\n        'displayPosition': displayMatrix[index],\r\n        'team': '',\r\n        'name': '',\r\n        'projection': '',\r\n        'salary': '',\r\n        'opponent': '',\r\n        'gameDate': ''\r\n    }))\r\n}\r\n\r\nexport { createEmptyLineup }","function formatDate(date) {\r\n    let day = String(date.getDate()).padStart(2, '0');\r\n    let month = String(date.getMonth() + 1).padStart(2, '0');\r\n    let year = date.getFullYear();\r\n    return year + '-' + month + '-' + day;\r\n}\r\n\r\nexport { formatDate }","export const lineupStructures = {\r\n  'fd': {\r\n    'mlb': {\r\n      'Classic': {\r\n        'lineupMatrix': ['P', 'C 1B', '2B', '3B', 'SS', 'OF', 'OF', 'OF', 'C,1B,2B,3B,SS,OF'],\r\n        'displayMatrix': ['P', 'C/1B', '2B', '3B', 'SS', 'OF', 'OF', 'OF', 'Util'],\r\n        'salaryCap': 35000\r\n      },\r\n      'Single Game': {\r\n        'lineupMatrix': ['any', 'any', 'any', 'any', 'any'],\r\n        'displayMatrix': ['MVP (1.5x Points)', 'FLEX', 'FLEX', 'FLEX', 'FLEX'],\r\n        'salaryCap': 35000\r\n      }\r\n    },\r\n    'nfl': {\r\n      'Classic': {\r\n        'lineupMatrix': ['QB', 'RB', 'RB', 'WR', 'WR', 'WR', 'TE', 'RB,WR,TE', 'D'],\r\n        'displayMatrix': ['QB', 'RB', 'RB', 'WR', 'WR', 'WR', 'TE', 'FLEX', 'D/ST'],\r\n        'salaryCap': 60000\r\n      },\r\n      'Single Game': {\r\n        'lineupMatrix': ['any', 'any', 'any', 'any', 'any'],\r\n        'displayMatrix': ['MVP (1.5x Points)', 'FLEX', 'FLEX', 'FLEX', 'FLEX'],\r\n        'salaryCap': 60000\r\n      }\r\n    },\r\n    'nba': {\r\n      'Classic': {\r\n        'lineupMatrix': ['PG', 'PG', 'SG', 'SG', 'SF', 'SF', 'PF', 'PF', 'C'],\r\n        'displayMatrix': ['PG', 'PG', 'SG', 'SG', 'SF', 'SF', 'PF', 'PF', 'C'],\r\n        'salaryCap': 60000\r\n      },\r\n      'Single Game': {\r\n        'lineupMatrix': ['any', 'any', 'any', 'any', 'any'],\r\n        'displayMatrix': ['MVP (2x Points)', 'STAR (1.5x Points)', 'PRO (1.2x Points)', 'UTIL', 'UTIL'],\r\n        'salaryCap': 60000\r\n      }\r\n    },\r\n    'nhl': {\r\n      'Classic': {\r\n        'lineupMatrix': ['C', 'C', 'W', 'W', 'W', 'W', 'D', 'D', 'G'],\r\n        'displayMatrix': ['C', 'C', 'W', 'W', 'W', 'W', 'D', 'D', 'G'],\r\n        'salaryCap': 55000\r\n      },\r\n      'Single Game': {\r\n        'lineupMatrix': ['any', 'any', 'any', 'any', 'any', 'any'],\r\n        'displayMatrix': ['Captain (1.5x Points)', 'UTIL', 'UTIL', 'UTIL', 'UTIL', 'UTIL'],\r\n        'salaryCap': 55000\r\n      }\r\n    }\r\n  },\r\n  'dk': {\r\n    'mlb': {\r\n      'Classic': {\r\n        'lineupMatrix': ['P', 'P', 'C', '1B', '2B', '3B', 'SS', 'OF', 'OF', 'OF'],\r\n        'displayMatrix': ['P', 'P', 'C', '1B', '2B', '3B', 'SS', 'OF', 'OF', 'OF'],\r\n        'salaryCap': 50000\r\n      },\r\n      'Single Game': {\r\n        'lineupMatrix': ['any', 'any', 'any', 'any', 'any', 'any'],\r\n        'displayMatrix': ['Captain (1.5x Points)', 'FLEX', 'FLEX', 'FLEX', 'FLEX', 'FLEX'],\r\n        'salaryCap': 50000\r\n      }\r\n    },\r\n    'nfl': {\r\n      'Classic': {\r\n        'lineupMatrix': ['QB', 'RB', 'RB', 'WR', 'WR', 'WR', 'TE', 'RB,WR,TE', 'DST'],\r\n        'displayMatrix': ['QB', 'RB', 'RB', 'WR', 'WR', 'WR', 'TE', 'FLEX', 'D/ST'],\r\n        'salaryCap': 50000\r\n      },\r\n      'Single Game': {\r\n        'lineupMatrix': ['any', 'any', 'any', 'any', 'any', 'any'],\r\n        'displayMatrix': ['Captain (1.5x Points)', 'FLEX', 'FLEX', 'FLEX', 'FLEX', 'FLEX'],\r\n        'salaryCap': 50000\r\n      }\r\n    },\r\n    'nba': {\r\n      'Classic': {\r\n        'lineupMatrix': ['PG', 'SG', 'SF', 'PF', 'C', 'PG,SG', 'SF,PF', 'PG,SG,SF,PF,C'],\r\n        'displayMatrix': ['PG', 'SG', 'SF', 'PF', 'C', 'G', 'F', 'Util'],\r\n        'salaryCap': 50000\r\n      },\r\n      'Single Game': {\r\n        'lineupMatrix': ['any', 'any', 'any', 'any', 'any', 'any'],\r\n        'displayMatrix': ['Captain (1.5x Points)', 'FLEX', 'FLEX', 'FLEX', 'FLEX', 'FLEX'],\r\n        'salaryCap': 50000\r\n      }\r\n    },\r\n    'nhl': {\r\n      'Classic': {\r\n        'lineupMatrix': ['C', 'C', 'LW,RW', 'LW,RW', 'LW,RW', 'D', 'D', 'G', 'LW,RW,C,D'],\r\n        'displayMatrix': ['C', 'C', 'W', 'W', 'W', 'D', 'D', 'G', 'Util'],\r\n        'salaryCap': 50000\r\n      },\r\n      'Single Game': {\r\n        'lineupMatrix': ['any', 'any', 'any', 'any', 'any', 'any'],\r\n        'displayMatrix': ['Captain (1.5x Points)', 'FLEX', 'FLEX', 'FLEX', 'FLEX', 'FLEX'],\r\n        'salaryCap': 50000\r\n      }\r\n    }\r\n  }\r\n};\r\n","export const apiRoot = 'https://vmgf1qzgs2.execute-api.us-east-2.amazonaws.com/prod';","export const teamAbbreviations = {\r\n    'Ari': 'Arizona Cardinals',\r\n    'Atl': 'Atlanta Falcons',\r\n    'Bal': 'Baltimore Ravens',\r\n    'Buf': 'Buffalo Bills',\r\n    'Car': 'Carolina Panthers',\r\n    'Chi': 'Chicago Bears',\r\n    'Cin': 'Cincinnati Bengals',\r\n    'Cle': 'Cleveland Browns',\r\n    'Dal': 'Dallas Cowboys',\r\n    'Den': 'Denver Broncos',\r\n    'Det': 'Detroit Lions',\r\n    'GB': 'Green Bay Packers',\r\n    'Hou': 'Houston Texans',\r\n    'Ind': 'Indianapolis Colts',\r\n    'Jax': 'Jacksonville Jaguars',\r\n    'KC': 'Kansas City Chiefs',\r\n    'LAC': 'Los Angeles Chargers',\r\n    'LAR': 'Los Angeles Rams',\r\n    'Mia': 'Miami Dolphins',\r\n    'Min': 'Minnesota Vikings',\r\n    'NE': 'New England Patriots',\r\n    'NO': 'New Orleans Saints',\r\n    'NYG': 'New York Giants',\r\n    'NYJ': 'New York Jets',\r\n    'Oak': 'Oakland Raiders', \r\n    'Phi': 'Philadelphia Eagles',\r\n    'Pit': 'Pittsburgh Steelers',\r\n    'SF': 'San Francisco 49ers',\r\n    'Sea': 'Seattle Seahawks',\r\n    'TB': 'Tampa Bay Buccaneers',\r\n    'Ten': 'Tennessee Titans',\r\n    'Was': 'Washington'\r\n};","import React from \"react\";\r\n\r\nconst loading = require(\"../icons/loading.svg\") as any;\r\nconst baseball = require(\"../icons/baseball.svg\") as any;\r\nconst football = require(\"../icons/football.ico\") as any;\r\nconst basketball = require(\"../icons/basketball.svg\") as any;\r\nconst hockey = require(\"../icons/hockey.svg\") as any;\r\n\r\nexport const Loading = (props: {sport: string}) =>\r\n    <div className={\"Loading\"}>\r\n        <div><p className={\"Loading-text\"}>Loading . . .</p></div>\r\n        <div><img src={props.sport === 'mlb' ? baseball :\r\n            props.sport === 'nfl' ? football :\r\n                props.sport === 'nba' ? basketball :\r\n                    props.sport === 'nhl' ? hockey :\r\n                        loading\r\n        } className={\"App-logo\"} alt=\"football\"/></div>\r\n    </div>;","import React from \"react\";\r\n\r\nconst baseball = require(\"../icons/baseball2.svg\") as any;\r\nconst football = require(\"../icons/football2.svg\") as any;\r\nconst basketball = require(\"../icons/basketball2.svg\") as any;\r\nconst hockey = require(\"../icons/hockey2.svg\") as any;\r\n\r\nexport const Optimizing = (props: {sport: string}) =>\r\n    <div className={\"Loading\"}>\r\n        <div><p className={\"Optimizing-text\"}>Optimizing . . .</p></div>\r\n        <div><img src={\r\n            props.sport === 'mlb' ? baseball :\r\n                props.sport === 'nfl' ? football :\r\n                    props.sport === 'nba' ? basketball :\r\n                        props.sport === 'nhl' ? hockey :\r\n                            football\r\n        } className={\"App-logo2\"} alt=\"football2\"/></div>\r\n    </div>;","import * as React from 'react';\r\n\r\ninterface playerAttributes {\r\n    playerId: number,\r\n    position: string,\r\n    displayPosition: string,\r\n    team: string,\r\n    name: string,\r\n    projection: number,\r\n    salary: number,\r\n    opponent: string,\r\n    opponentRank: number,\r\n    gameDate: string\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes\r\n}\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>{props.player.name}</tr>\r\n            <tr>{props.player.team} {props.player.position}</tr>\r\n        </td>\r\n    </tr>;\r\n\r\nexport const BlackList = (props: {\r\n    blackList: number[],\r\n    playerPool: playerAttributes[]\r\n    }) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            <tbody>\r\n            <tr style={{backgroundColor: 'indianred'}}>\r\n                <th>Player</th>\r\n            </tr>\r\n            {props.blackList.map(\r\n                (playerId) => {\r\n                    return (\r\n                        <Player player={props.playerPool.filter(player => player.playerId === playerId)[0]}/>\r\n                    )\r\n                }\r\n            )}\r\n            </tbody>\r\n        </table>;\r\n","function getOrdinalString(number) {\r\n    if (!number) {\r\n        return ''\r\n    }\r\n    let numString = number.toString();\r\n    if (numString.endsWith('1') && numString[numString.length - 2] !== '1') {\r\n        return numString + 'st'\r\n    } else if (numString.endsWith('2') && numString[numString.length - 2] !== '1') {\r\n        return numString + 'nd'\r\n    } else if (numString.endsWith('3') && numString[numString.length - 2] !== '1') {\r\n        return numString + 'rd'\r\n    } else {\r\n        return numString + 'th'\r\n    }\r\n}\r\n\r\nexport { getOrdinalString }","import * as React from 'react';\r\nimport {getOrdinalString} from \"../functions/getOrdinalString\";\r\n\r\nconst plus = require(\"../icons/plus.ico\") as any;\r\nconst minus = require(\"../icons/minus.ico\") as any;\r\nconst up = require(\"../icons/up.svg\") as any;\r\nconst down = require(\"../icons/down.svg\") as any;\r\n\r\ninterface playerAttributes {\r\n    playerId: number,\r\n    position: string,\r\n    displayPosition: string,\r\n    team: string,\r\n    name: string,\r\n    status: string,\r\n    projection: number,\r\n    salary: number,\r\n    opponent: string,\r\n    opponentRank: number,\r\n    gameDate: string\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    onPlusClick: () => void,\r\n    onMinusClick: () => void,\r\n    whiteList: number[],\r\n    blackList: number[],\r\n    salarySum: number,\r\n    cap: number\r\n}\r\n\r\nconst Player = (props: playerProps) =>\r\n    <tr style={{backgroundColor: (props.whiteList.includes(props.player.playerId)) ? 'lightgreen' :\r\n            (props.blackList.includes(props.player.playerId)) ? 'indianred' : 'white'}}>\r\n        <td>\r\n            <tr style={{fontWeight: 'bold'}}>\r\n                {props.player.name} <b style={{color: 'red'}}>{props.player.status}</b>\r\n            </tr>\r\n            <tr>{props.player.team} {props.player.position}</tr>\r\n        </td>\r\n        <td>{props.player.opponent}</td>\r\n        <td style={{fontWeight: 'bold',\r\n            color: props.player.opponentRank < 9 ? 'red' : props.player.opponentRank > 22 ? 'green' : 'black'}}>\r\n            {getOrdinalString(props.player.opponentRank)}</td>\r\n        <td>{props.player.projection.toFixed(1)}</td>\r\n        <td style={{color: (props.salarySum + props.player.salary > props.cap) ? 'red' : 'black'}}>\r\n            ${props.player.salary.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n        </td>\r\n        <td>\r\n            ${(props.player.salary / props.player.projection).toFixed(0)\r\n            .toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n        </td>\r\n        <td>\r\n            <img src={plus} alt={\"add\"} onClick={props.onPlusClick} style={{height: '3vmin'}}/>\r\n        </td>\r\n        <td>\r\n            <img src={minus} alt={\"remove\"} onClick={props.onMinusClick} style={{height: '3vmin'}}/>\r\n        </td>\r\n    </tr>;\r\n\r\nexport const PlayerPool = (props: {\r\n    playerList: playerAttributes[],\r\n    filterList: playerAttributes[],\r\n    whiteListFunction: (index: number) => void,\r\n    blackListFunction: (index: number) => void,\r\n    sortFunction: (a: playerAttributes, b: playerAttributes) => number,\r\n    toggleSort: (attribute: string) => void,\r\n    sortAttribute: string,\r\n    sortSign: number,\r\n    whiteList: number[],\r\n    blackList: number[],\r\n    salarySum: number,\r\n    cap: number}) =>\r\n        <table style={{ borderCollapse: 'collapse'}} className={'Draft-grid'}>\r\n            <tbody>\r\n            <tr style={{backgroundColor: 'lightgray'}}>\r\n                <th>Player</th>\r\n                <th>Opponent</th>\r\n                <th>Opp Rank</th>\r\n                <th>Projection\r\n                        <img src={props.sortSign === 1 ? down : up} alt={\"sort\"}\r\n                             onClick={() => props.toggleSort('projection')}\r\n                             style={{marginLeft: '1vmin', height: '2vmin',\r\n                                 backgroundColor: props.sortAttribute === 'projection' ? 'red' : 'white'}}/>\r\n                </th>\r\n                <th>Salary\r\n                    <img src={props.sortSign === 1 ? down : up} alt={\"sort\"}\r\n                         onClick={() => props.toggleSort('salary')}\r\n                         style={{marginLeft: '1vmin', height: '2vmin',\r\n                             backgroundColor: props.sortAttribute === 'salary' ? 'red' : 'white'}}/>\r\n                </th>\r\n                <th>Price Per Point\r\n                    <img src={props.sortSign === 1 ? down : up} alt={\"sort\"}\r\n                         onClick={() => props.toggleSort('pricePerPoint')}\r\n                         style={{marginLeft: '1vmin', height: '2vmin',\r\n                             backgroundColor: props.sortAttribute === 'pricePerPoint' ? 'red' : 'white'}}/>\r\n                </th>\r\n                <th>Add</th>\r\n                <th>Blacklist</th>\r\n            </tr>\r\n            {props.playerList.sort((a, b) => props.sortFunction(a, b)).map(\r\n                (player, index) => {\r\n                    if (!props.filterList || props.filterList.includes(player)) {\r\n                        return (\r\n                            <Player key={index}\r\n                                    player={player}\r\n                                    onPlusClick={() => props.whiteListFunction(index)}\r\n                                    onMinusClick={() => props.blackListFunction(index)}\r\n                                    whiteList={props.whiteList}\r\n                                    blackList={props.blackList}\r\n                                    salarySum={props.salarySum}\r\n                                    cap={props.cap}\r\n                            />\r\n                        )\r\n                    } else return null;\r\n                }\r\n            )}\r\n            </tbody>\r\n        </table>;\r\n","function sumAttribute(lineup, attribute) {\r\n    let attributeArray = lineup.map((player) => ((player[attribute]) ? parseFloat(player[attribute]) : 0));\r\n    return attributeArray.reduce((a,b) => a + b, 0);\r\n}\r\n\r\nexport { sumAttribute }","function arrayToSet(array) {\r\n    let set = [];\r\n    for (let i = 0; i < array.length; i++) {\r\n        if (!set.includes(array[i])) {\r\n            set.push(array[i]);\r\n        }\r\n    }\r\n    return set;\r\n}\r\n\r\nexport { arrayToSet }","import * as React from 'react';\r\nimport {getOrdinalString} from \"../functions/getOrdinalString\";\r\n\r\ninterface playerAttributes {\r\n    playerId: number,\r\n    position: string,\r\n    displayPosition: string,\r\n    team: string,\r\n    name: string,\r\n    status: string,\r\n    projection: number,\r\n    salary: number,\r\n    opponent: string,\r\n    opponentRank: number,\r\n    gameDate: string\r\n}\r\n\r\ninterface playerProps {\r\n    player: playerAttributes,\r\n    onRemove: () => void,\r\n    whiteList: number[],\r\n    site: string\r\n}\r\n\r\nconst Player = (props: playerProps) => {\r\n    let roundedProjection;\r\n    let formattedSalary;\r\n    if (props.player.salary) {\r\n        roundedProjection = parseFloat(props.player.projection.toFixed(1));\r\n        let salary = props.player.salary;\r\n        let isCaptain = props.player.displayPosition.includes('x Points)');\r\n        if (isCaptain && props.site === 'dk') {\r\n            let multiplier = (parseFloat(props.player.displayPosition.split('(')[1].substring(0, 3)));\r\n            salary *= multiplier;\r\n        }\r\n        formattedSalary = '$'.concat(salary.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))\r\n    }\r\n\r\n    return (\r\n        <tr style={{backgroundColor: (\r\n            props.player.name && props.whiteList.includes(props.player.playerId)) ? 'lightgreen' : 'white'}}>\r\n            <td>{props.player.displayPosition}</td>\r\n            <td>{props.player.team}</td>\r\n            <td style={{fontWeight: (props.player.position) ? 'normal' : 'bold'}}>\r\n                {props.player.name} <b style={{color: 'red'}}>{props.player.status}</b>\r\n            </td>\r\n            <td style={{fontWeight: (props.player.position) ? 'normal' : 'bold'}}>{roundedProjection}</td>\r\n            <td style={{fontWeight: (props.player.position) ? 'normal' : 'bold'}}>{formattedSalary}</td>\r\n            <td>{props.player.opponent}</td>\r\n            <td style={{fontWeight: 'bold',\r\n                'color': props.player.opponentRank < 9 ? 'red' : props.player.opponentRank > 22 ? 'green' : 'black'}}>\r\n                {getOrdinalString(props.player.opponentRank)}</td>\r\n            <td>{props.player.gameDate}</td>\r\n            <td>\r\n                {props.player.position && props.player.name && <button onClick={props.onRemove} style={{fontWeight: 'bold'}}>X</button>}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport const Lineup = (props: {\r\n    dfsLineup: playerAttributes[],\r\n    removePlayer: (playerIndex: number) => void,\r\n    site: string,\r\n    whiteList: number[],\r\n    pointSum: number,\r\n    salarySum: number,\r\n    cap: number}) =>\r\n        <table className={'Dfs-grid'}>\r\n            <tbody>\r\n            <tr style={{backgroundColor: (props.site === 'fd') ? 'dodgerblue' : 'black'}}>\r\n                <th>Position</th>\r\n                <th>Team</th>\r\n                <th>Player</th>\r\n                <th>Projection</th>\r\n                <th>Salary</th>\r\n                <th>Opponent</th>\r\n                <th>Opp Rank</th>\r\n                <th>Game Date</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n            {props.dfsLineup.map(\r\n                (player, playerIndex) => (\r\n                    <Player player={player}\r\n                            onRemove={() => props.removePlayer(playerIndex)}\r\n                            whiteList={props.whiteList}\r\n                            site={props.site}\r\n                    />\r\n                )\r\n            )}\r\n            <tr style={{fontWeight: 'bold'}}>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n                <td>Total</td>\r\n                <td>{props.pointSum.toFixed(1)}</td>\r\n                <td style={{color: (props.salarySum > props.cap) ? 'indianred' : 'black'}}>\r\n                    {'$'.concat(props.salarySum.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"))}\r\n                </td>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n                <td>{null}</td>\r\n            </tr>\r\n            </tbody>\r\n        </table>;\r\n","import {Loading} from \"./Loading\";\r\nimport {Optimizing} from \"./Optimizing\";\r\nimport {BlackList} from \"./BlackList\";\r\nimport {PlayerPool} from \"./PlayerPool\";\r\nimport {sumAttribute} from \"../functions/sumAttribute\";\r\nimport {arrayToSet} from \"../functions/arrayToSet\";\r\nimport {Lineup} from \"./Lineup\";\r\nimport React from \"react\";\r\n\r\nconst search = require(\"../icons/search.ico\") as any;\r\n\r\ninterface playerAttributes {\r\n    playerId: number,\r\n    position: string,\r\n    displayPosition: string,\r\n    team: string,\r\n    name: string,\r\n    status: string,\r\n    projection: number,\r\n    salary: number,\r\n    opponent: string,\r\n    opponentRank: number,\r\n    gameDate: string\r\n}\r\n\r\nexport const GridSection = (props: {\r\n    isLoading: boolean,\r\n    isOptimizing: boolean,\r\n    site: string,\r\n    sport: string,\r\n    contest: string,\r\n    lineup: playerAttributes[],\r\n    playerPool: playerAttributes[],\r\n    filteredPool: playerAttributes[],\r\n    whiteList: number[],\r\n    blackList: number[],\r\n    searchText: string,\r\n    filterPlayers: (attribute: string, value: string) => void,\r\n    addToLineup: (playerIndex: number) => void,\r\n    removeFromLineup: (playerIndex: number) => void,\r\n    toggleBlackList: (playerIndex: number) => void,\r\n    sortAttributeFunction: (a: playerAttributes, b: playerAttributes) => number,\r\n    sortAttribute: string,\r\n    sortSign: number,\r\n    toggleSort: (attribute: string) => void,\r\n    salaryCap: number\r\n}) =>\r\n    props.isLoading ? <Loading sport={props.sport}/> : props.isOptimizing ? <Optimizing sport={props.sport}/> :\r\n    props.site && props.sport && props.contest &&\r\n    <div className={\"Dfs-grid-section\"}>\r\n        <div className={\"Player-list-box\"}>\r\n            <h2 className={\"Dfs-header\"}>Blacklist</h2>\r\n            <BlackList blackList={props.blackList} playerPool={props.playerPool}/>\r\n        </div>\r\n        <div>\r\n            <h2 className={\"Dfs-header\"}>Players</h2>\r\n            <div style={{display: 'flex', flexDirection: 'column'}}>\r\n                {!props.filteredPool && <img src={search} style={{height: '3vmin', position: 'absolute'}} alt=\"search\"/>}\r\n                <input type=\"text\" style={{height: '25px', width: '90%'}}\r\n                       value={props.searchText}\r\n                       onChange={(event) => props.filterPlayers('name', event.target.value)}>{null}</input>\r\n            </div>\r\n            <div style={{display: 'flex'}}>\r\n                <button onClick={() => props.filterPlayers('position', 'All')}>All</button>\r\n                {\r\n                    arrayToSet(props.playerPool.map((player) => player.position))\r\n                        .map((position) =>\r\n                            <button onClick={() => props.filterPlayers('position', position)}>{position}</button>\r\n                        )\r\n                }\r\n                <select onChange={(event) => props.filterPlayers('team', event.target.value)}>\r\n                    <option defaultValue={'All'}>All</option>\r\n                    {arrayToSet(props.playerPool.map((player) => player.team))\r\n                        .sort()\r\n                        .map((team) =>\r\n                            <option value={team}>{team}</option>\r\n                    )}\r\n                </select>\r\n            </div>\r\n            <div className={\"Player-list-box\"}>\r\n                <PlayerPool playerList={props.playerPool} filterList={props.filteredPool}\r\n                            whiteListFunction={props.addToLineup} blackListFunction={props.toggleBlackList}\r\n                            sortFunction={props.sortAttributeFunction} toggleSort={props.toggleSort}\r\n                            sortAttribute={props.sortAttribute} sortSign={props.sortSign}\r\n                            whiteList={props.whiteList} blackList={props.blackList}\r\n                            salarySum={sumAttribute(props.lineup, 'salary')} cap={props.salaryCap}/>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h2 className={\"Dfs-header\"}>Lineup</h2>\r\n            <Lineup dfsLineup={props.lineup} removePlayer={props.removeFromLineup} site={props.site}\r\n                    whiteList={props.whiteList} pointSum={sumAttribute(props.lineup, 'projection')}\r\n                    salarySum={sumAttribute(props.lineup, 'salary')} cap={props.salaryCap}/>\r\n        </div>\r\n    </div>;","import React from \"react\";\r\n\r\nexport const ContestSection = (props: {\r\n    isLoading: boolean,\r\n    site: string,\r\n    sport: string,\r\n    contest: string,\r\n    contests: string[],\r\n    setContest: (contest: string) => void\r\n}) =>\r\n    props.isLoading || (!props.site || !props.sport) ? null : props.contests.length === 0 ?\r\n        <p>No contests are available.</p> :\r\n        <div>\r\n            <h3>Choose a game contest:</h3>\r\n            <div style={{display: 'flex'}}>\r\n                {props.contests.map(\r\n                    contestName =>\r\n                        <button style={{backgroundColor: (contestName === props.contest) ? 'dodgerblue' : 'white'}}\r\n                                key={contestName} onClick={() => props.setContest(contestName)}>{contestName}</button>\r\n                )}\r\n            </div>\r\n        </div>;\r\n","import React from \"react\";\r\n\r\nconst sports = ['mlb', 'nfl', 'nba', 'nhl'];\r\n\r\nexport const SportSection = (props: {\r\n    isLoading: boolean,\r\n    site: string,\r\n    sport: string,\r\n    setSport: (sport: string) => void\r\n}) =>\r\n    props.isLoading || !props.site ? null :\r\n        <div>\r\n            <h3>Choose a sport:</h3>\r\n            <div style={{display: 'flex'}}>\r\n                {sports.map(\r\n                    thisSport => <button\r\n                        key={thisSport}\r\n                        style={{backgroundColor: (props.sport === thisSport) ? 'dodgerblue' : 'white'}}\r\n                        onClick={() => props.setSport(thisSport)}>{thisSport.toUpperCase()}</button>\r\n                )}\r\n            </div>\r\n        </div>;","export const injuryAbbreviations = {\r\n    'questionable': 'Q',\r\n    'out': 'O',\r\n    'day-to-day': 'DTD',\r\n    'suspended': 'SUSP'\r\n};","import React, { Component } from 'react'\r\nimport './App.css'\r\nimport { Container } from 'react-bootstrap'\r\nimport DatePicker from 'react-date-picker'\r\nimport {createEmptyLineup} from './functions/createEmptyLineup'\r\nimport { getAddToLineupState } from './functions/getAddToLineupState'\r\nimport { getRemoveFromLineupState } from './functions/getRemoveFromLineupState'\r\nimport { getToggleBlackListState } from './functions/getToggleBlackListState'\r\nimport { getFilterPlayersState } from './functions/getFilterPlayersState'\r\nimport {formatDate} from \"./functions/formatDate\"\r\nimport { lineupStructures } from './resources/lineupStructures'\r\nimport { apiRoot } from './resources/config.js'\r\nimport {teamAbbreviations} from \"./resources/teamAbbreviations\";\r\nimport {GridSection} from \"./ts_objects/GridSection\";\r\nimport {ContestSection} from \"./ts_objects/ContestSection\";\r\nimport {SportSection} from \"./ts_objects/SportSection\";\r\nimport {injuryAbbreviations} from \"./resources/injuryAbbreviations\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isLoading: false, isOptimizing: false, site: '', sport: '', contest: '',\r\n        date: new Date(), fanduelData: {}, dfsData: {}, projectionsData: {}, contests: [], sports: [],\r\n        lineup: [], lineupMatrix: [], displayMatrix: [], salaryCap: 0, playerPool: [], filteredPool: null,\r\n        playerPoolData: [], sortAttribute: 'salary', sortSign: 1, searchText: '', whiteList: [], blackList: [],\r\n        opponentRanks: {}, injuries: {}};\r\n  }\r\n\r\n  getFanduelData = async (date) => {\r\n      this.setState({isLoading: true});\r\n      const fanduelData = await fetch(apiRoot + '/fanduel?date=' + formatDate(date))\r\n          .then(response => response.json());\r\n      this.setState({\r\n          isLoading: false,\r\n          date: date,\r\n          fanduelData: fanduelData,\r\n          sport: ''\r\n      });\r\n  };\r\n\r\n  setSite = async (site) => {\r\n      if (site === 'fd')\r\n          await this.getFanduelData(this.state.date);\r\n      this.setState({\r\n          site: site,\r\n          sport: '',\r\n          contest: '',\r\n          contests: [],\r\n          playerPool: [],\r\n          filteredPool: null,\r\n          whiteList: [],\r\n          blackList: []\r\n      });\r\n  };\r\n\r\n  setSport = async (sport) => {\r\n      let {site, fanduelData} = this.state;\r\n      this.setState({isLoading: true, sport: sport, contest: ''});\r\n      const projectionsData = await fetch(apiRoot + '/projections?sport=' + sport)\r\n          .then(response => response.json());\r\n      const dfsData = site === 'fd' ?\r\n          fanduelData.filter(contest => contest.sport === sport.toUpperCase()) :\r\n          await fetch(apiRoot + '/draftkings?sport=' + sport).then(response => response.json());\r\n      const contests = dfsData.length > 0 ? this.extractContestsFromData(dfsData) : [];\r\n      const opponentRanks = sport === 'nfl' ?\r\n          await fetch(apiRoot + '/opponentRanks').then(response => response.json()) : {};\r\n      const injuries = await fetch(apiRoot + '/injuries?sport=' + sport)\r\n          .then(response => response.json());\r\n      this.setState({\r\n          isLoading: false,\r\n          projectionsData: projectionsData,\r\n          dfsData: dfsData,\r\n          contests: contests,\r\n          opponentRanks: opponentRanks,\r\n          injuries: injuries,\r\n          playerPool: [],\r\n          filteredPool: null,\r\n          whiteList: [],\r\n          blackList: []\r\n      });\r\n  };\r\n\r\n  setContest = (contest) => {\r\n      let {site, sport, dfsData, projectionsData} = this.state;\r\n      let gameType = contest.includes('@') || contest.includes('vs') ? 'Single Game' : 'Classic';\r\n      let lineupMatrix = lineupStructures[site][sport][gameType].lineupMatrix;\r\n      let displayMatrix = lineupStructures[site][sport][gameType].displayMatrix;\r\n      let salaryCap = lineupStructures[site][sport][gameType].salaryCap;\r\n      let dfsPlayers = dfsData.filter(contestJson => contestJson.contest === contest)[0]['players'];\r\n      let playerPoolData = this.combineData(dfsPlayers, projectionsData);\r\n      let emptyLineup = createEmptyLineup(lineupMatrix, displayMatrix);\r\n      this.setState({\r\n          contest: contest,\r\n          playerPool: playerPoolData,\r\n          filteredPool: null,\r\n          playerPoolData: playerPoolData,\r\n          whiteList: [],\r\n          blackList: [],\r\n          lineup: emptyLineup,\r\n          lineupMatrix: lineupMatrix,\r\n          displayMatrix: displayMatrix,\r\n          salaryCap: salaryCap\r\n      });\r\n  };\r\n\r\n  combineData = (dfsPlayers, projectionsData) => {\r\n      let {site, sport, opponentRanks, injuries} = this.state;\r\n      let combinedData = [];\r\n      dfsPlayers.forEach(player => {\r\n          let playerData = projectionsData[player.playerId];\r\n          if (playerData) {\r\n              player.name = playerData.name;\r\n              player.team = playerData.team;\r\n              player.opponent = playerData.opponent;\r\n              player.gameDate = playerData.gameDate;\r\n              player.projection = playerData[site + 'Projection'];\r\n              if (sport === 'nfl') {\r\n                  let opposingTeam = playerData.opponent.split(' ')[1];\r\n                  player.opponentRank = opponentRanks[teamAbbreviations[opposingTeam]][player.position];\r\n              }\r\n              let status = injuries[playerData.name] ? injuries[playerData.name].toLowerCase() : '';\r\n              player.status = injuryAbbreviations[status];\r\n              combinedData.push(player);\r\n          }\r\n      });\r\n      return combinedData;\r\n  };\r\n\r\n  extractContestsFromData = (dataArray) => {\r\n      let contestArray = [];\r\n      dataArray.forEach(contestJson => contestArray.push(contestJson.contest));\r\n      return contestArray;\r\n  };\r\n\r\n  filterPlayers = (attribute, value) => {\r\n    let newState = getFilterPlayersState(attribute, value, this.state);\r\n    this.setState(newState);\r\n  };\r\n\r\n  addToLineup = (playerIndex) => {\r\n    let newState = getAddToLineupState(playerIndex, this.state);\r\n    if (typeof newState === 'string') {\r\n      alert(newState);\r\n    } else {\r\n      this.setState(newState);\r\n    }\r\n  };\r\n\r\n  removeFromLineup = (playerIndex) => {\r\n    let newState = getRemoveFromLineupState(playerIndex, this.state);\r\n    this.setState(newState);\r\n  };\r\n\r\n  clearLineup = () => {\r\n      let {lineupMatrix, displayMatrix} = this.state;\r\n      this.setState({\r\n          lineup: createEmptyLineup(lineupMatrix, displayMatrix),\r\n          whiteList: [],\r\n          blackList: []\r\n      })\r\n  };\r\n\r\n  toggleBlackList = (playerIndex) => {\r\n    let newState = getToggleBlackListState(playerIndex, this.state);\r\n    this.setState(newState);\r\n  };\r\n\r\n  sortAttribute = (a, b) => {\r\n      let {sortAttribute, sortSign} = this.state;\r\n      if (sortAttribute === 'pricePerPoint')\r\n          return sortSign * (b.salary / b.projection - a.salary / a.projection);\r\n      else\r\n          return sortSign*(b[sortAttribute] - a[sortAttribute])\r\n  };\r\n  \r\n  toggleSort = (attribute) => {\r\n      if (attribute === this.state.sortAttribute) {\r\n          this.setState({sortSign: -this.state.sortSign})\r\n      } else {\r\n          this.setState({sortAttribute: attribute})\r\n      }\r\n  };\r\n\r\n  generateOptimalLineup = async () => {\r\n      let {playerPool, whiteList, blackList, lineupMatrix, displayMatrix, salaryCap, playerPoolData} = this.state;\r\n      this.setState({isOptimizing: true});\r\n      const playerIds = await fetch(apiRoot + '/optimize', {\r\n          method: 'POST',\r\n          headers: {'Content-Type': 'application/json'},\r\n          body: JSON.stringify({\r\n              'players': playerPool,\r\n              'whiteList': whiteList,\r\n              'blackList': blackList,\r\n              'lineupMatrix': lineupMatrix,\r\n              'salaryCap': salaryCap\r\n          })\r\n      }).then(response => response.json());\r\n      if (!Array.isArray(playerIds) || playerIds.includes(0)) {\r\n          let positionsWithIssue = [];\r\n          playerIds.forEach((id, index) => {\r\n              if (id === 0)\r\n                  positionsWithIssue.push(displayMatrix[index]);\r\n          });\r\n          alert('Optimal lineup could not be found.\\nThe optimizer had a problem finding the following positions: ' +\r\n              JSON.stringify(positionsWithIssue));\r\n          this.setState({isOptimizing: false})\r\n      } else {\r\n          let optimalLineup = playerIds.map(playerId => playerPool.find(player => player.playerId === playerId));\r\n          optimalLineup.forEach((player, index) => player.displayPosition = displayMatrix[index]);\r\n          this.setState({\r\n              isOptimizing: false,\r\n              lineup: optimalLineup,\r\n              playerPool: playerPoolData\r\n          })\r\n      }\r\n  };\r\n\r\n  render() {\r\n    const {isLoading, isOptimizing, sport, site, contest, date, contests, lineup, salaryCap, playerPool, filteredPool,\r\n      sortAttribute, sortSign, searchText, whiteList, blackList} = this.state;\r\n\r\n    return (\r\n        <Container fluid={true}>\r\n          <h1 className={\"App-header\"}>DFS Optimizer</h1>\r\n          <div className={\"Dfs-sport\"}>\r\n            <h3>Choose a site:</h3>\r\n            <div style={{display: 'flex'}}>\r\n              <button style={{backgroundColor: (site === 'fd') ? 'dodgerblue' : 'white'}}\r\n                      onClick={() => this.setSite('fd')}>Fanduel</button>\r\n              <button style={{backgroundColor: (site === 'dk') ? 'dodgerblue' : 'white'}}\r\n                      onClick={() => this.setSite('dk')}>Draftkings</button>\r\n            </div>\r\n            {site === 'fd' && <DatePicker onChange={(date) => this.getFanduelData(date)} value={date}/>}\r\n            <SportSection isLoading={isLoading} site={site} sport={sport} setSport={this.setSport}/>\r\n            <ContestSection isLoading={isLoading} site={site} sport={sport} contest={contest} contests={contests}\r\n                            setContest={this.setContest}/>\r\n            <div style={{display: 'flex', margin: '2%'}}>\r\n                {sport && contest && site && <button style={{marginTop: '10px'}}\r\n                                                     onClick={this.generateOptimalLineup}>Generate Lineup</button>}\r\n              {sport && contest && site && <button style={{marginTop: '10px'}}\r\n                                                   onClick={this.clearLineup}>Clear Lineup</button>}\r\n            </div>\r\n          </div>\r\n          <GridSection isLoading={isLoading} isOptimizing={isOptimizing} site={site} sport={sport} contest={contest}\r\n                       lineup={lineup} playerPool={playerPool} filteredPool={filteredPool} whiteList={whiteList}\r\n                       blackList={blackList} searchText={searchText} filterPlayers={this.filterPlayers}\r\n                       addToLineup={this.addToLineup} removeFromLineup={this.removeFromLineup}\r\n                       toggleBlackList={this.toggleBlackList} sortAttributeFunction={this.sortAttribute}\r\n                       sortAttribute={sortAttribute} sortSign={sortSign} toggleSort={this.toggleSort}\r\n                       salaryCap={salaryCap}/>\r\n        </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","function getFilterPlayersState(attribute, value, state) {\r\n    let {playerPool, text} = state;\r\n    let filteredPool;\r\n    if (value === 'All') {\r\n        return {\r\n            searchText: '',\r\n            filteredPool: playerPool\r\n        }\r\n    } else if (attribute === 'name') {\r\n        text = value.toLowerCase();\r\n        filteredPool = playerPool.filter(\r\n            (player) => player.name.toLowerCase().includes(text.toLowerCase())\r\n        );\r\n    } else {\r\n        filteredPool = playerPool.filter(\r\n            (player) => player[attribute].includes(value)\r\n        );\r\n    }\r\n    return {\r\n        searchText: text,\r\n        filteredPool: filteredPool\r\n    }\r\n}\r\n\r\nexport { getFilterPlayersState }","function getAddToLineupState(playerIndex, state) {\r\n    let {playerPool, lineup, whiteList, blackList} = state;\r\n    let playerToAdd = playerPool[playerIndex];\r\n    let playerInLineup = lineup.find((player) => player.playerId === playerToAdd.playerId, null);\r\n    if (playerInLineup) {\r\n        return 'Player already added to lineup.'\r\n    }\r\n    let spotsToReplace = lineup.filter(\r\n        (player) =>\r\n            !player.name && (\r\n                playerToAdd.position === player.position\r\n                || player.position.includes(playerToAdd.position)\r\n                || playerToAdd.position.includes(player.position)\r\n                || player.position === 'any'\r\n            )\r\n    );\r\n    if (spotsToReplace.length === 0) {\r\n        return 'Not enough positions available to add player.'\r\n    } else {\r\n        whiteList.push(playerToAdd.playerId);\r\n        if (blackList.includes(playerToAdd.playerId)) {\r\n            blackList.splice(blackList.indexOf(playerToAdd.playerId), 1);\r\n        }\r\n        let spotToReplace = spotsToReplace[0];\r\n        let lineupIndex = lineup.indexOf(spotToReplace);\r\n        let playerToAddCopy = JSON.parse(JSON.stringify(playerToAdd));\r\n        playerToAddCopy.position = spotToReplace.position;\r\n        playerToAddCopy.displayPosition = spotToReplace.displayPosition;\r\n        lineup[lineupIndex] = playerToAddCopy;\r\n        return {\r\n            lineup: lineup,\r\n            whiteList: whiteList,\r\n            blackList: blackList,\r\n            filteredPool: null,\r\n            searchText: ''\r\n        }\r\n    }\r\n}\r\n\r\nexport { getAddToLineupState }\r\n","function getRemoveFromLineupState(lineupIndex, state) {\r\n    let {lineup, whiteList, lineupMatrix, displayMatrix} = state;\r\n    let playerToRemove = lineup[lineupIndex];\r\n    let playerInWhiteList = whiteList.find((playerId) => playerId === playerToRemove.playerId, null);\r\n    if (playerInWhiteList) {\r\n        whiteList.splice(whiteList.indexOf(playerInWhiteList), 1);\r\n    }\r\n    lineup[lineupIndex] = {\r\n        position: lineupMatrix[lineupIndex],\r\n        displayPosition: displayMatrix[lineupIndex],\r\n        team: '',\r\n        name: '',\r\n        playerId: '',\r\n        projected: '',\r\n        salary: '',\r\n        opponent: ''\r\n    };\r\n    return {\r\n        lineup: lineup,\r\n        whiteList: whiteList\r\n    }\r\n}\r\n\r\nexport { getRemoveFromLineupState }","function getToggleBlackListState(playerIndex, state) {\r\n    let {playerPool, lineup, whiteList, blackList, lineupMatrix, displayMatrix} = state;\r\n    let blackListedPlayer = playerPool[playerIndex];\r\n    if (blackList.includes(blackListedPlayer.playerId)) {\r\n        blackList.splice(blackList.indexOf(blackListedPlayer.playerId), 1);\r\n    } else {\r\n        blackList.push(blackListedPlayer.playerId);\r\n        if (whiteList.includes(blackListedPlayer.playerId)) {\r\n            whiteList.splice(whiteList.indexOf(blackListedPlayer.playerId), 1);\r\n        }\r\n        let playerInLineup = lineup.find((player) => player.playerId === blackListedPlayer.playerId, null);\r\n        if (playerInLineup) {\r\n            let lineupIndex = lineup.indexOf(playerInLineup);\r\n            lineup[lineupIndex] = {\r\n                position: lineupMatrix[lineupIndex],\r\n                displayPosition: displayMatrix[lineupIndex],\r\n                team: '',\r\n                name: '',\r\n                playerId: '',\r\n                projected: '',\r\n                salary: '',\r\n                opponent: ''\r\n            };\r\n        }\r\n    }\r\n    return {\r\n        lineup: lineup,\r\n        whiteList: whiteList,\r\n        blackList: blackList,\r\n        filteredPool: null,\r\n        searchText: ''\r\n    }\r\n}\r\n\r\nexport { getToggleBlackListState }","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}